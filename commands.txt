# Set environment variables
PROJECT_ID=engaged-purpose-342203
GITHUB_USER=gabgrz
GITHUB_EMAIL=gab.120gg@gmail.com
GITHUB_TOKEN=<GIT_TOKEN>

# Verify environment variables
echo $PROJECT_ID
echo $GITHUB_USER
echo $GITHUB_TOKEN

# Set gcloud project
gcloud config set project $PROJECT_ID

# Update tf and tfvars values
sed -i.bak "s/PROJECT_ID/${PROJECT_ID}/g" ./example-pipelines/environments/*/terraform.tfvars
sed -i.bak "s/PROJECT_ID/${PROJECT_ID}/g" ./example-pipelines/environments/*/backend.tf
sed -i.bak "s/PROJECT_ID/${PROJECT_ID}/g" ./jenkins-gke/tf-gke/terraform.tfvars
sed -i.bak "s/PROJECT_ID/${PROJECT_ID}/g" ./jenkins-gke/tf-gke/backend.tf

# Install required Terraform version: ~> 0.12.6
sudo apt install terraform=0.12.6
# If not available, install a version that conforms the requirement
# Check available versions
sudo apt policy terraform
# Install
sudo apt install terraform=<VERSION>

# (Optional) Run Terraform from docker container
docker run -i -t hashicorp/terraform:0.12.6 plan

# Terraform commands
cd jenkins-gke/tf-gke/
terraform init
terraform plan --var "github_username=$GITHUB_USER" --var "github_token=$GITHUB_TOKEN"
terraform apply --auto-approve --var "github_username=$GITHUB_USER" --var "github_token=$GITHUB_TOKEN"
terraform apply --var "github_username=$GITHUB_USER" --var "github_token=$GITHUB_TOKEN"
terraform apply --var "github_username=$GITHUB_USER" --var "github_token=$GITHUB_TOKEN" --target=module.jenkins-gke.google_container_node_pool.pools

# After Jenkins is install, get the URL, user and password
JENKINS_IP=$(kubectl get service jenkins -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
JENKINS_PASSWORD=$(kubectl get secret jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode);echo
printf "Jenkins url: http://$JENKINS_IP\nJenkins user: admin\nJenkins password: $JENKINS_PASSWORD\n"

# Additional notes:
- It may be needed to run helm to add official jenkins repo from the local environment
- Remember to manually add the JenkinsURL in the Jenkins configuration for proper reverse-proxy.
- The Multibranch Job configuration from values.yaml is not working at the moment, so it has to be configured manually from within Jenkins, by pointing to the same Jenkinsfile.